{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","items","category","ID","BasicTable","classes","useState","rows","setRows","searchTerm","setSearchTerm","filteredRows","setFilteredRows","sortUp","setSortUp","edit","setEdit","selectAll","setSelectAll","handleAddParent","rowIndex","event","values","tmpRows","parents","React","useEffect","filtredRows","Array","forEach","row","added","value","toLowerCase","includes","push","checked","deleteSelected","i","length","splice","getIDOptionsForRow","filter","item","par","TableContainer","component","Paper","Table","className","TableHead","style","backgroundColor","TableRow","TableCell","width","Checkbox","color","onChange","Button","endIcon","ArrowUpward","onClick","sort","a","b","IDa","IDb","localeCompare","TextField","e","target","placeholder","InputProps","endAdornment","InputAdornment","position","SearchOutlined","showButton","float","RenderDeleteButton","marginRight","unshift","TableBody","map","index","Autocomplete","multiple","options","groupBy","getOptionLabel","option","renderInput","params","label","String","v","mergeIDs","theme","createTheme","typography","h2","fontSize","marginBottom","palette","primary","main","orange","secondary","green","text","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577a4829.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { makeStyles, ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { orange, green } from '@material-ui/core/colors';\nimport 'fontsource-roboto';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { ArrowUpward,  SearchOutlined } from '@material-ui/icons';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Checkbox } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n});\n\nconst items = [\n  {\n    category: 'korpus',\n    ID: 'ZA2090'\n  },\n  {\n    category: 'korpus',\n    ID: 'ZA2039'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2019'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2059'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2089'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA20100'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK01'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK02'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK03'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK04'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK50'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK51'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK52'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK53'\n  },\n\n\n]\n\n/*function getRowsFromItems() {\n  var rows = new Array();\n  items.forEach(i => {\n    rows.push([i]);\n  })\n  rows.sort((a, b) => a[0].ID.localeCompare(b[0].localeCompare));\n  return rows;\n}*/\n\nfunction BasicTable() {\n  const classes = useStyles();\n  //const tmpRows = getRowsFromItems();\n  const [rows, setRows] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredRows, setFilteredRows] = useState([]);\n  const [sortUp, setSortUp] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [selectAll, setSelectAll] = useState(false);\n  const handleAddItem = (rowIndex) => (event, values) => {\n    const tmpRows = [...rows];\n\n    tmpRows[rowIndex] = values.sort((a, b) => b.ID.localeCompare(a.localeCompare));\n    tmpRows[rowIndex].parents = rows[rowIndex].parents;\n    tmpRows[rowIndex].checked = rows[rowIndex].checked;\n    //tmpRows.sort((a, b) => a[0].ID.localeCompare(b[0].localeCompare));\n    setRows(tmpRows);\n  }\n  const handleAddParent = (rowIndex) => (event, values) => {\n    const tmpRows = [...rows];\n    tmpRows[rowIndex].parents = [...values];\n    setRows(tmpRows);\n  }\n\n  function handleSortIDs() {\n    const tmpRows = [...rows];\n    if (sortUp) {\n      tmpRows.sort((a, b) => {\n        var IDa = '';\n        var IDb = '';\n        if(a[0]) {\n          IDa = a[0].ID;\n        }\n        if(b[0]){\n          IDb = b[0].ID;\n        }\n        return IDa.localeCompare(IDb.localeCompare);\n      });\n      setSortUp(false);\n    } else {\n      \n      tmpRows.sort((a, b) => {\n        var IDa = '';\n        var IDb = '';\n        if(a[0]) {\n          IDa = a[0].ID;\n        }\n        if(b[0]){\n          IDb = b[0].ID;\n        }\n        return IDb.localeCompare(IDa.localeCompare);\n      });\n      setSortUp(true);\n    }\n\n    setRows(tmpRows);\n\n  }\n\n  function addRow() {\n    const tmpRows = [...rows];\n    const row = [];\n    row.parents = [];\n    row.checked = false;\n    tmpRows.unshift(row);\n    setRows(tmpRows);\n  }\n\n  function mergeIDs(row, i) {\n    var ID = String(i);\n    row.forEach(v => {\n      ID += v.ID\n    })\n    return ID;\n  }\n\n  React.useEffect(() => {\n    const filtredRows = new Array();\n    if (searchTerm) {\n      rows.forEach(row => {\n        let added = false;\n        row.forEach(value => {\n          if (value.ID.toLowerCase().includes(searchTerm.toLowerCase())) {\n            if (!added) {\n              filtredRows.push(row);\n              added = true;\n            }\n          }\n        })\n      })\n      setFilteredRows(filtredRows);\n    } else {\n      setFilteredRows([...rows])\n    }\n  }, [searchTerm, rows]);\n\n  React.useEffect(() => {\n    const tmpRows = [...rows];\n    tmpRows.forEach(row => {\n      row.checked = selectAll;\n    })\n    setRows(tmpRows);\n  }, [selectAll])\n\n  const rowChecked = (index) => () => {\n    const tmpRows = [...filteredRows];\n    tmpRows[index].checked = !tmpRows[index].checked;\n    setFilteredRows(tmpRows);\n\n  }\n\n  function deleteSelected(){\n    const tmpRows = [...rows];\n    for(var i = tmpRows.length-1; i>=0; i--){\n      if(tmpRows[i].checked){\n        tmpRows.splice(i, 1);\n      }\n    }\n    setRows(tmpRows);\n  }\n\n  function getIDOptionsForRow(row){\n    if(row.length){\n      return items.filter(item => item.category === row[0].category);\n    } else if(row.parents.length){\n      return items.filter(item => {\n        let filter = true;\n        row.parents.forEach(par => {\n          if(item.category === par.category) {\n            filter = false;\n          }\n        });\n        return filter;\n      })\n    } else {\n      return items\n    }\n  }\n\n  function RenderDeleteButton(){\n    let showButton = false;\n    filteredRows.forEach(row => {\n      if(row.checked){\n        showButton = true;  \n      }\n    })\n    if(showButton){\n      return <Button style={{ float: 'right', backgroundColor: 'red', color: 'white' }} onClick={deleteSelected} > Smazat </Button>\n    } else {\n      return <></>\n    }\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead style={{ backgroundColor: '#ececec' }}>\n          <TableRow>\n            {\n              edit ? <TableCell width=\"30px\"> <Checkbox color=\"primary\" checked={selectAll} onChange={()=>setSelectAll(!selectAll)} /></TableCell> : <></>\n            }\n            <TableCell>\n              <Button endIcon={sortUp ? < ArrowUpward /> : <ArrowDownwardIcon />} onClick={handleSortIDs} > ID </Button>\n              <TextField onChange={(e) => { setSearchTerm(e.target.value) }} placeholder=\"Vyhledat ID\" InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchOutlined />\n                  </InputAdornment>\n                ),\n              }}></TextField>\n            </TableCell>\n            <TableCell >Umístění\n              {\n                edit ? RenderDeleteButton() : <></>\n              }\n              <Button style={{ float: 'right', backgroundColor: 'green', color: 'white', marginRight: '20px' }} onClick={addRow} > Přidat </Button>\n              <Button style={{ float: 'right', backgroundColor: 'orange', color: 'white', marginRight: '20px' }} onClick={() => {setEdit(!edit)}} > Editovat</Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredRows.map((row, i) => (\n            <TableRow key={mergeIDs(row, i)}>\n              {\n                edit ? <TableCell width=\"30px\"> <Checkbox checked={row.checked} onChange={rowChecked(i)} color=\"primary\" />\n                </TableCell> : <></>\n              }\n              <TableCell>\n                <Autocomplete\n                  multiple\n                  options={ getIDOptionsForRow(row)}\n                  groupBy={(item) => item.category}\n                  getOptionLabel={(option) => option.ID}\n                  value={row}\n                  onChange={handleAddItem(i)}\n                  style={{ width: '300px', color: '#000000' }}\n                  renderInput={(params) => <TextField {...params} label=\"ID položky\" color='primary' />}\n                />\n              </TableCell>\n              <TableCell>\n                <Autocomplete\n                  multiple\n                  options={row.length ? items.filter(item => item.category !== row[0].category) : items}\n                  groupBy={(item) => item.category}\n                  getOptionLabel={(option) => option.ID}\n                  style={{ width: '650px', color: '#000000' }}\n                  renderInput={(params) => <TextField {...params} label=\"ID položky\" color='primary' />}\n                  onChange={handleAddParent(i)}\n                  value={row.parents ? row.parents : []}\n                />\n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nconst theme = createTheme({\n  typography: {\n    h2: {\n      fontSize: 36,\n      marginBottom: 0\n    }\n  },\n  palette: {\n    primary: {\n      main: orange[400],\n    },\n    secondary: {\n      main: green[400]\n    },\n    text: {\n      primary: \"#000000\"\n    }\n  }\n})\n\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div >\n        <header>\n          <BasicTable />\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}