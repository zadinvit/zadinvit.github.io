{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","items","category","ID","BasicTable","classes","tmpRows","rows","Array","forEach","i","push","sort","a","b","localeCompare","getRowsFromItems","useState","setRows","searchTerm","setSearchTerm","filteredRows","setFilteredRows","sortUp","setSortUp","React","useEffect","filtredRows","row","added","value","toLowerCase","includes","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","Button","endIcon","ArrowUpward","onClick","TextField","onChange","e","target","placeholder","InputProps","endAdornment","InputAdornment","position","SearchOutlined","TableBody","map","Autocomplete","multiple","options","filter","item","groupBy","getOptionLabel","option","rowIndex","event","values","length","style","width","color","renderInput","params","label","String","v","mergeIDs","theme","createTheme","typography","h2","fontSize","marginBottom","palette","primary","main","orange","secondary","green","text","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6733bbd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { makeStyles, ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { orange, green } from '@material-ui/core/colors';\nimport 'fontsource-roboto';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Button } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { ArrowUpward, SearchOutlined } from '@material-ui/icons';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  },\n});\n\nconst items = [\n  {\n    category: 'korpus',\n    ID: 'ZA2090'\n  },\n  {\n    category: 'korpus',\n    ID: 'ZA2039'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2019'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2059'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA2089'\n  },\n\n  {\n    category: 'korpus',\n    ID: 'ZA20100'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK01'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK02'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK03'\n  },\n  {\n    category: 'kolecka',\n    ID: 'MK04'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK50'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK51'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK52'\n  },\n  {\n    category: 'Zásuvka',\n    ID: 'ZAK53'\n  },\n\n\n]\n\nfunction getRowsFromItems() {\n  var rows = new Array();\n  items.forEach(i => {\n    rows.push([i]);\n  })\n  rows.sort((a, b) => a[0].ID.localeCompare(b[0].localeCompare));\n  return rows;\n}\n\nfunction BasicTable() {\n  const classes = useStyles();\n  const tmpRows = getRowsFromItems();\n  const [rows, setRows] = useState(tmpRows);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredRows, setFilteredRows] = useState(tmpRows);\n  const [sortUp, setSortUp] = useState(false);\n  const handleAddItem = (rowIndex) => (event, values) => {\n    if (values.length >= 1) {\n      const tmpRows = [...rows];\n\n      tmpRows[rowIndex] = values.sort((a, b) => b.ID.localeCompare(a.localeCompare))\n      //tmpRows.sort((a, b) => a[0].ID.localeCompare(b[0].localeCompare));\n      setRows(tmpRows);\n    }\n  }\n  function handleSortIDs() {\n    const tmpRows = [...rows];\n    if (sortUp) {\n      tmpRows.sort((a, b) => a[0].ID.localeCompare(b[0].localeCompare));\n      setSortUp(false);\n    } else {\n      tmpRows.sort((a, b) => b[0].ID.localeCompare(a[0].localeCompare));\n      setSortUp(true);\n    }\n\n    setRows(tmpRows);\n\n  }\n  function mergeIDs(row, i) {\n    var ID = String(i);\n    row.forEach(v => {\n      ID += v.ID\n    })\n    return ID;\n  }\n\n  React.useEffect(() => {\n    const filtredRows = new Array();\n    rows.forEach(row => {\n      let added = false;\n      row.forEach(value => {\n        if(value.ID.toLowerCase().includes(searchTerm.toLowerCase())){\n          if(!added) {\n            filtredRows.push(row);\n            added = true;\n          }\n        }\n      })\n    })\n    setFilteredRows(filtredRows);\n  }, [searchTerm, rows]);\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <Button endIcon={sortUp ? < ArrowUpward /> : <ArrowDownwardIcon />} onClick={handleSortIDs} > ID </Button>\n              <TextField onChange={(e) => {setSearchTerm(e.target.value)}}  placeholder=\"Vyhledat ID\" InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchOutlined />\n                  </InputAdornment>\n                ),\n              }}></TextField>\n            </TableCell>\n            <TableCell >Umístění</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredRows.map((row, i) => (\n            <TableRow key={mergeIDs(row, i)}>\n              <TableCell>\n                <Autocomplete\n                  multiple\n                  options={items.filter(item => item.category === row[0].category)}\n                  groupBy={(item) => item.category}\n                  getOptionLabel={(option) => option.ID}\n                  value={row}\n                  onChange={handleAddItem(i)}\n                  style={{ width: '300px', color: '#000000' }}\n                  renderInput={(params) => <TextField {...params} label=\"ID položky\" color='primary' />}\n                />\n              </TableCell>\n              <TableCell>\n                <Autocomplete\n                  multiple\n                  options={items.filter(item => item.category !== row[0].category)}\n                  groupBy={(item) => item.category}\n                  getOptionLabel={(option) => option.ID}\n                  style={{ width: '650px', color: '#000000' }}\n                  renderInput={(params) => <TextField {...params} label=\"ID položky\" color='primary' />}\n                />\n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nconst theme = createTheme({\n  typography: {\n    h2: {\n      fontSize: 36,\n      marginBottom: 0\n    }\n  },\n  palette: {\n    primary: {\n      main: orange[400],\n    },\n    secondary: {\n      main: green[400]\n    },\n    text: {\n      primary: \"#000000\"\n    }\n  }\n})\n\n\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div >\n        <header>\n          <BasicTable />\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}